<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>