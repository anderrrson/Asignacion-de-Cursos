<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAGXRF
        WHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA95JREFUWEe9V0toE1EUjSgqumrqXleFuhBE
        ty6sVSEbqUVQiDsXIoKIG6VuXBlxI3RhKxREBF3qSlHBhQhdaN0pFEJI2iRtmr7Jf/KZN+M5z5uhKZOS
        xrQHLjN35r5zz9z33p2Z0HIyeWJtZeVXpVBQdqVirGRZKpfNarW2Znme9zYE4PjdcxzlNBqdVq+rpm2r
        erXqj6fVSiVVWF9Xq5mMBdPruZyC/UbcCPl8MDmIIuL6qJXLcbteD4vbN5RlhfFwcZ7rRmMSvL/wMAfM
        TQI3LTnlU455i4vmvFWvx13X7VkAxoZatn0B1bhOQxUmivn8vrV8PozrRgCBis3CnoobCiHQCADB2Vql
        4jqt1hX6qEoc13oX4DhXMXUL4HtGU7ncl8zS0qNMNhtGQl8AOA9jGv54rjtuLtTbAlz3a6NWu+1pvUC/
        DwFTjWr1nrihSrEYSSeTr9PpdIcAArynq6VSwi6Xh0NQ067AITke5FE3m9sToPUURPgCMA2RTCoVKICA
        2PtYnG8Y6K+BjQDZ9gVo7QtA0gimoKsAcO/FBigyMFiA1jsqgMC2tDjXgxPQ4xSAdz/mf/xfBQYlwPMe
        YN08FJdzPLmSTr8yuwALWi4bgPtJUalvWIg3txSwzT4wCqNoRXObzWxJqfPsA1zQEmaASr3EVr1knK4C
        sAgH0QmtQiEMMX0I0Ppz2bLmUMoYBsTgdzfcx1PGwOUbul8MJY6h1HOI+SS0BvBncf057p/sLsDzhhF4
        A+S3cOzP/o29QS6hNYB/DA/2OL+6musqYDeAbtl9G+4GTBMMEoASncO74QPKNz8QIxc4hd6Hyb1ZAOcH
        7+wkGwUW0gju/5eRg1zkBPdRSWOA+wECHOcaXqsz4g4M5CS3uAaBArCdovgUe1GxrKFmrTbk2PZ/GTnI
        RU5ySxqDQAFoGlErny+iUcTZQNjFENOXcSw5yEVOcksaA8QETkEUe3Ra3IGBnOQW1yBYgNZRBPoCsHD2
        wH+PD5fPeJKejLEY845jhYYPNk1ucQ26C9C6owJomaMrmcypzPJyT8bYarE4KsMNyNmXAD4FBEzj1TqH
        D4yejLH4L5juqMAWAlbFNzACNkwBAaKL+GCdQHl7MsZyjAw36DoFrUbjiPgGCLqGrfNc3IEBnDPkFteg
        XYG74htAuemE6NNjUD1Cw3YK7HJbGce0x6MbjkknPCZpDBBndXwVI+COHMfRvz9CcXBv366RC5wbcxAm
        96ZfszNyumPYmMPkxs/Bz3KhcBk35PLOg7mYE7l/hFKJxPF0KjWP33GFTzCFFWx+uTE/gzVwkps5mIs5
        U4nE6F8MV+PqpDMCIQAAAABJRU5ErkJggg==
</value>
  </data>
</root>