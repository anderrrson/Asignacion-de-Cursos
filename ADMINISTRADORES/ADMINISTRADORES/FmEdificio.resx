<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>